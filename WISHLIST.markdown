Wish List
=========

This list is not a promise. :-) We need to think about each proposed feature
and how it'll be be implemented to have the better user experience using the
library. Just a brainstorm. The ideas are divided in the categories below:


CLI
---

- __[really-needed]__ Create a command-line tool (called `outputty`) so some
  users don't need to create a Python script to use the software. This
  command-line interface should be able to get data from stdin or CSV and
  export data to stdout, CSV or TXT. __It won't be interactive__. It's being
  developed at branch `feature/cli`.


API
---

- __[really-needed]__ Add doc strings to `outputty` module, `Table` class,
  all `Table`'s methods and plugins.
- Create some way to print colors and backgrounds. See the article [ANSI escape
  code](http://en.wikipedia.org/wiki/ANSI_escape_code) on Wikipedia and the
  library [fabulous](http://lobstertech.com/fabulous.html).
- Create `Table.__repr__`?
  - If yes, accept creating an object with representation generated by
    `__repr__`.
- Create `plugin_text.read`?


Packaging-related stuff
-----------------------

- __[really-needed]__ Create a man page.
- __[really-needed]__ Modify the file structure (or create a script to do it)
  so we can create a Python package. See
  [The Hitchhikerâ€™s Guide to Packaging](http://guide.python-distribute.org/).
- __[really-needed]__ Register the project on
  [PyPi](http://pypi.python.org/pypi).


Processing Input Data
---------------------

- The number of input headers should not be the same of output ones.
- Receive a function to 'process row and return' instead of returning raw-data.
- Encode and decode strings with the default system encoding instead of
  __UTF-8__?


Plugins
-------

- `Table.from/to_mysql='username:password@host/database/table'`? Work started
  at branch `feature/mysql`.
- `Table.from/to_latex`?


Table Templates
---------------

- Text-related:
  - Should be able to change the space character and line feed (like `pipe`,
    `plus` etc.).
  - Change the name of special characters (`pipe`, `plus` and `dash`) to
    something more intuitive.
  - Create some kind of 'templates' with pre-defined `pipe`, `plus`, `dash`
    etc. See [sqlite's .mode column](http://www.sqlite.org/sqlite.html).
  - The `dash` inside the line that split the table into header and data should
    be different from the "normal `dash`". All these "characters" should be
    generalised.
- CSV-related:
  - Create some way to change CSV dialect.
